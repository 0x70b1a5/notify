interface notify {
    variant priority {
        default,
        normal,
        high
    }

    record notification {
        /// required
        to: list<string>,

        /// optional
        data: option<string>,
        title: option<string>,
        body: option<string>,
        ttl: option<u64>,
        expiration: option<u64>,
        priority: option<priority>,
        subtitle: option<string>,
        sound: option<string>,
        badge: option<u64>,
        channel-id: option<string>,
        category-id: option<string>,
        mutable-content: option<bool>,

        /// internal
        id: option<string>,
    }

    record notification-with-process {
        process: string,
        notification: notification,
    }

    record process-notif-config {
        /// allow notifications
        allow: bool,
    }

    record process-settings-update {
        process: string,
        settings: process-notif-config,
    }

    variant request {
        /// send a notification
        push(notification),
        /// history of notifications 
        history,
        /// change settings
        update-settings(process-settings-update),
        /// close a web socket
        web-socket-close(u32),
        /// delete a notification
        delete(string),
        /// delete a push token
        delete-token(string),
    }

    variant response {
        /// notification sent
        push,
        /// history of notifications for given package
        history(list<notification-with-process>),
        /// settings for given package updated
        update-settings,
        /// notification deleted
        delete,
        /// token deleted
        delete-token,
    }
}

world notify-tantum-ergo-dot-os-v0 {
    import notify;
    include process-v0;
}
